import Head from "next/head"
import { withLayoutMain } from "../layouts/LayoutMain/LayoutMain"
import Posts from "../components/Posts/Posts"
import { dehydrate, QueryClient, useQuery } from "react-query"
import { fetchPosts } from "../api/posts"
import Error from "../components/Error/Error"

const getStaticProps = async ctx => {
  console.log("getStaticProps => ctx =>", ctx)
  let isError = false
  const queryClient = new QueryClient()

  try {
   await queryClient.prefetchQuery(["posts"], fetchPosts)
  } catch (error) {
    isError = true
    // @ts-ignore
    ctx.res.statusCode = error.response.status
  }

  return {
    props: {
      //also passing down isError state to show a custom error component.
      isError,
      dehydratedState: dehydrate(queryClient)
    }
  }
}

function Index(props) {
  // Если ошибка в базовом запроссе из getServerSideProps
  if (props.isError) return <Error />

  return (
    <>
      <Head>
        <title>Тайтл магазина</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-cyan-100 h-screen">
        <div className="text-2xl text-center mb-4">Home index.tsx</div>
        <Posts />
      </div>
    </>
  )
}

export default withLayoutMain(Index)
